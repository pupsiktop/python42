Сокеты поддерживают различные протоколы передачи данных, 
например:TCP (Transmission Control Protocol). Обеспечивает 
надёжную и устойчивую передачу данных, гарантирует доставку 
пакетов в правильном порядке.  UDP (User Datagram Protocol). 
Обеспечивает более быструю, но менее надёжную передачу данных.

Некоторые этапы работы программы с сокетами: 

1. Создание сокета.Программа создаёт сокет, указывая тип протокола.

2. Связывание с адресом. Сокет связывается с IP-адресом и номером порта, чтобы 
быть доступным для соединений или отправки/получения данных.
s.bind((HOST, PORT))
HOST = '127.0.0.1'
PORT = это число от 1 дод 65535, нельзя занять меньше 1024

3. Прослушивание и установление соединения (для TCP). Сокет на стороне сервера переводится в режим прослушивания, ожидая входящих соединений.
s.listen(1) # параметр метода -  указывает количество непринятых подключений, которые система будет принимать

4. Клиент инициирует соединение с сервером, сервер принимает соединение, 
создавая новый сокет для взаимодействия с клиентом.
conn, addr = s.accept()

5. Обмен данными. Данные передаются между клиентом и сервером.
data = conn.recv(1024) получение сообщения от клиента.
conn.sendall(data) отправление того е сообщения в том же порядке. 

6. Закрытие соединения. После завершения обмена данными соединение закрывается. 
Реализуется конструкцией with ... as...:






1. Методы сервера

socket.bind(address) — "связывать" привязывает сокет к адресу (инициализирует IP-адрес и порт). 

socket.listen([backlog]) — "cлушать" переводит сервер в режим приёма соединений. Параметр backlog 
указывает количество соединений, которые будет принимать сервер. 

socket.accept() — "принимать" принимает соединение и блокирует приложение в ожидании сообщения от клиента. 
Возвращает кортеж: объект соединения (сокет) и адрес клиента. 

2. Методы клиента

socket.connect(address) — устанавливает соединение с удалённым сервером. 

socket.sendall(bytes) — отправляет данные клиенту и возвращает количество отправленных байт. 

socket.recv(bufsize[, flags]) — "recovery-возвращать" читает и возвращает данные в двоичном формате из сокета. 
Параметр bufsize — максимальное количество байтов в одном сообщении.